"""
Django settings for MentalCrowdWorkerProject project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-h&5c7_r4(9fxht!+0*x4b(i6wwpa9iq^$q(mx8ay!fje8dmq&="

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "MentalCrowdWorkerProjectApp",
    "rest_framework"
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer'
    ]
}

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "MentalCrowdWorkerProject.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, 'MentalCrowdWorkerProjectApp', 'templates'),
        ]
        ,
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

WSGI_APPLICATION = "MentalCrowdWorkerProject.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "MentalCrowdWorkerProject",
        "USER": "hashjamm",
        "PASSWORD": "qkrhd20164231!",
        "HOST": "112.222.70.85",
        "PORT": "23306",
        'OPTIONS': {
            'charset': 'utf8mb4',
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "ko-kr"

TIME_ZONE = "Asia/Seoul"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# static 파일을 클라이언트가 접근할 때 사용되는 URL 경로 prefix
# 예: 템플릿에서 {% static 'img/logo.png' %} → "/static/img/logo.png" 로 렌더링됨
STATIC_URL = "static/"

# collectstatic 명령어 실행 시 모든 static 파일이 이 디렉토리에 복사됨
# 배포나 PDF 생성처럼 실제 파일 경로 접근이 필요한 작업에 사용됨
# 이 경로는 직접 만들지 않아도 되고, collectstatic 실행 시 자동 생성됨
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# 개발 중 Django가 static 파일을 찾기 위해 탐색할 디렉토리 목록
# 즉, 원본 static 파일들이 실제로 존재하는 위치를 명시함
# 예: MentalCrowdWorkerProjectApp/static/ 내부에 존재하는 이미지, CSS 등
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'MentalCrowdWorkerProjectApp', 'static')
]

# # OpenAI API 설정 (실제 적용은 안함함)
# OPENAI_API_KEY = os.environ.get('OPENAI_API_KEY', None)

# # Hugging Face API 설정 (무료 한국어 모델용, 실제 적용은 안함)
# HUGGINGFACE_API_KEY = os.environ.get('HUGGINGFACE_API_KEY', None)


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
